openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - url: https://kasir.farrelanshary.me/
info:
  version: "1.0.0"
  title: Natics API Documentation
  description: API punya Natics ini weh, jangan dipake
paths:
  '/api/general/provinces':
    get:
      tags:
        - Region
      description: Returns all provinces in Indonesia
      parameters:
        - name: api_key
          in: query
          description: API key provided by Farrel Anshary
          required: true
          schema:
            type: string
          example: asdasd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get all provinces"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      provinces:
                        type: array
                        description: Single province data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the province
                              example: 11
                            name:
                              type: string
                              description: Name of the province
                              example: "aceh"
                            latitude:
                              type: number
                              format: double
                              description: Latitude of the province
                              example: 4.36855
                            longitude:
                              type: number
                              format: double
                              description: Longitude of the province
                              example: 97.0253
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      summary: Get all provinces

  '/api/general/regencies':
    get:
      tags:
        - Region
      description: Returns all regencies in Indonesia, literally all
      parameters:
        - name: api_key
          in: query
          description: API key provided by Farrel Anshary
          required: true
          schema:
            type: string
          example: asdasd
      summary: Get all regencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get all regencies"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      regencies:
                        type: array
                        description: Regencies in specified province
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the regency
                              example: 1101
                            name:
                              type: string
                              description: Name of the regency
                              example: simeulue
                            province:
                              type: object
                              description: Province where this regency located
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the province
                                  example: 11
                                name:
                                  type: string
                                  description: Name of the province
                                  example: "aceh"
                                latitude:
                                  type: number
                                  format: double
                                  description: Latitude of the province
                                  example: 4.36855
                                longitude:
                                  type: number
                                  format: double
                                  description: Longitude of the province
                                  example: 97.0253
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/regencies/{provinceId}':
    get:
      tags:
        - Region
      description: Returns all regencies in specified province
      parameters:
        - name: provinceId
          in: path
          required: true
          description: Province id acquired from provinces
          schema:
            type: integer
          example: 32
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get all regencies in jawa barat"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      province:
                        type: object
                        description: Single province data
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the province
                            example: 32
                          name:
                            type: string
                            description: Name of the province
                            example: jawa barat
                          latitude:
                            type: number
                            format: double
                            description: Latitude of the province
                            example: -6.88917
                          longitude:
                            type: number
                            format: double
                            description: Longitude of the province
                            example: 107.64047
                          regencies:
                            type: array
                            description: Regencies in specified province
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the regency
                                  example: 3201
                                name:
                                  type: string
                                  description: Name of the regency
                                  example: bogor

        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Province] 322"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
      summary: Get all regencies from a province

  '/api/general/animals':
    get:
      tags:
        - Animals
      description: Get or search all animals, add query to your parameters to search for animals
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: query
          in: query
          required: false
          description: Search query (optional)
          schema:
            type: string
          example: Harimau jawa
      summary: Get / search all animals
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get animals"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      animals:
                        type: array
                        description: Animals data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the animal
                              example: 1
                            name:
                              type: string
                              description: Name of the animal
                              example: Harimau Sumatera
                            category:
                              type: object
                              description: Category of the animal
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the category
                                  example: 1
                                name:
                                  type: string
                                  description: Category name
                                  example: Harimau
                            scientific_name:
                              type: string
                              description: Scientific name of the animal
                              example: Panthera tigris sumatrae
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

    post:
      tags:
        - Animals
      summary: Create a new animal
      description: Create a new animal data to database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - name
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                name:
                  type: string
                  description: Name of the animal
                  example: Harimau Sumatera
                category:
                  type: string
                  description: Name of the animal
                  example: Harimau
                scientific_name:
                  type: string
                  description: Scientific name of the animal
                  example: Panthera tigris sumatrae
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully add new animal"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      animal:
                        type: object
                        description: Created animal data
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the animal
                            example: 1
                          name:
                            type: string
                            description: Name of the animal
                            example: Harimau Sumatera
                          category:
                            type: object
                            description: Category of the animal
                            properties:
                              id:
                                type: integer
                                description: ID represents a unique identifier of the category
                                example: 1
                              name:
                                type: string
                                description: Category name
                                example: Harimau
                          scientific_name:
                            type: string
                            description: Scientific name of the animal
                            example: Panthera tigris sumatrae

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      name:
                        type: array
                        description: List of errors in name field
                        items:
                          type: string
                        example: [
                          "The name field is required.",
                          "The name has already been taken."
                        ]
                      category:
                        type: array
                        description: List of errors in category field
                        items:
                          type: string
                        example: [
                          "The category field is required.",
                        ]

  '/api/general/animals/categories':
    get:
      tags:
        - Animals
      description: Get or search all categories, add query to your parameters to search for categories
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: query
          in: query
          required: false
          description: Search query (optional)
          schema:
            type: string
          example: Harimau
      summary: Get / search all categories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get categories"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      categories:
                        type: array
                        description: Categories data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the category
                              example: 1
                            name:
                              type: string
                              description: Name of the category
                              example: Harimau
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/organizations':
    get:
      tags:
        - Organizations
      description: Get or search all organizations, add query to your parameters to search for organizations
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: query
          in: query
          required: false
          description: Search query (optional)
          schema:
            type: string
          example: IAR
      summary: Get / search all organizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get organizations"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      organizations:
                        type: array
                        description: Organizations data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the organization
                              example: 1
                            name:
                              type: string
                              description: Name of the organization
                              example: IAR
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

    post:
      tags:
        - Organizations
      summary: Create a new organization
      description: Create a new organization data to database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - name
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                name:
                  type: string
                  description: Name of the organization
                  example: WWF
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully add new organization"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      organization:
                        type: object
                        description: Created organization data
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the organization
                            example: 1
                          name:
                            type: string
                            description: Name of the organization
                            example: WWF
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      name:
                        type: array
                        description: List of errors in one field
                        items:
                          type: string
                        example: [
                          "The name field is required.",
                          "The name has already been taken."
                        ]

  '/api/general/sites':
    get:
      tags:
        - Sites
      description: Get or search all sites, add query to your parameters to search for sites
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: query
          in: query
          required: false
          description: Search query (optional)
          schema:
            type: string
          example: Kompas.com
      summary: Get / search all sites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get sites"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      sites:
                        type: array
                        description: Sites data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the website
                              example: 1
                            name:
                              type: string
                              description: Name of the website
                              example: detiknews
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

    post:
      tags:
        - Sites
      summary: Create a new site
      description: Create a new site data to database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - name
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                name:
                  type: string
                  description: Name of the site
                  example: detik.com
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully add new site"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      site:
                        type: object
                        description: Created site data
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the website
                            example: 1
                          name:
                            type: string
                            description: Name of the website
                            example: detik.com
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      name:
                        type: array
                        description: List of errors in one field
                        items:
                          type: string
                        example: [
                          "The name field is required.",
                          "The name has already been taken."
                        ]

  '/api/general/news':
    get:
      tags:
        - News
      description: Get all news
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the query
          schema:
            type: string
            format: date
          example: "2021-10-31"
        - name: end
          in: query
          required: true
          description: End date of the query
          schema:
            type: string
            format: date
          example: "2021-11-31"
        - name: query
          in: query
          required: false
          description: Search query
          schema:
            type: string
          example: Penangkapan penyu
      summary: Get all news
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get news"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 49
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      news:
                        type: array
                        description: All news data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the news
                              example: 1
                            title:
                              type: string
                              description: Title of the news
                              example: Bunuh-Cincang Penyu Langka Dilindungi, 7 Nelayan Gunungkidul Ditangkap
                            url:
                              type: string
                              description: URL of the news
                              example: https://news.detik.com/berita-jawa-tengah/d-5541942/bunuh-cincang-penyu-langka-dilindungi-7-nelayan-gunungkidul-ditangkap
                            date:
                              type: string
                              description: Date of the reported case
                              example: "2021-04-22"
                            news_date:
                              type: string
                              description: Date of the news
                              example: "2021-04-22"
                            is_trained:
                              type: boolean
                              description: Whether the row has been trained or not
                              example: true
                            label:
                              type: string
                              description: Label of the news
                              example: "perburuan"
                            organizations:
                              type: array
                              description: Organizations involved in the news
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    description: ID represents a unique identifier of the organization
                                  name:
                                    type: string
                                    description: Name of the organization
                              example: [
                                {
                                  "id": 6,
                                  "name": "BKSDA DIY"
                                }
                              ]
                            site:
                              type: object
                              description: Site source of the news
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the website
                                  example: 2
                                name:
                                  type: string
                                  description: Name of the website
                                  example: detiknews
                            animals:
                              type: array
                              description: Animals involved in this case
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    description: ID represents a unique identifier of the animal
                                    example: 6
                                  name:
                                    type: string
                                    description: Name of the animal
                                    example: Penyu Lekang
                                  scientific_name:
                                    type: string
                                    description: Scientific name of the animal
                                    example: Lepidochelys olivacea
                                  amount:
                                    type: integer
                                    description: Amount of the animal involved
                                    example: 1
                                  category:
                                    type: object
                                    description: Category of the animal
                                    properties:
                                      id:
                                        type: integer
                                        description: ID represents a unique identifier of the category
                                        example: 1
                                      name:
                                        type: string
                                        description: Category name
                                        example: Penyu
                            regencies:
                              type: array
                              description: Regencies where the case happened (nullable)
                              items:
                                type: object
                                description: Regency where the case happened (nullable)
                                properties:
                                  id:
                                    type: integer
                                    description: ID represents a unique identifier of the regency
                                    example: 3403
                                  name:
                                    type: string
                                    description: Name of the regency
                                    example: gunung kidul
                                  province:
                                    type: object
                                    description: Province where the case happened (nullable)
                                    properties:
                                      id:
                                        type: integer
                                        description: ID represents a unique identifier of the province
                                        example: 34
                                      name:
                                        type: string
                                        description: Name of the province
                                        example: di yogyakarta
                                      latitude:
                                        type: number
                                        format: double
                                        description: Latitude of the province
                                        example: 7.7956
                                      longitude:
                                        type: number
                                        format: double
                                        description: Longitude of the province
                                        example: 110.3695

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

    post:
      tags:
        - News
      summary: Create a new news
      description: Create a new news data to database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - title
                - url
                - is_trained
                - news_date
                - label
                - regencies
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                title:
                  type: string
                  description: Title of the news
                  example: KKP Gagalkan Penangkapan Penyu Hijau Ilegal di Desa Waduwalla
                url:
                  type: string
                  description: URL of the news
                  example: https://borneo24.com/headlines/kkp-gagalkan-penangkapan-penyu-hijau-ilegal-di-desa-waduwalla
                date:
                  type: string
                  description: Date of the reported news with valid yyyy-mm-dd format (optional)
                  example: "2020-11-05"
                news_date:
                  type: string
                  description: Date of the news acquired from the scraper
                  example: "1 week ago"
                is_trained:
                  type: boolean
                  description: Whether the row has been trained or not
                  example: false
                label:
                  type: string
                  description: Label of the news (penyelundupan, penyitaan, perburuan, perdagangan, others)
                  example: "perburuan"
                organizations:
                  type: array
                  description: Organizations involved in the news (optional)
                  items:
                    type: string
                  example: [
                    BKKPN Kupang,
                    Dinas Kelautan dan Perikanan (DKP) Kabupaten Sabu Raijua
                  ]
                site:
                  type: string
                  description: Site source of the news (optional)
                  example: Borneo24.com - Berita Terbaru dan Terkini di Kalimantan
                regencies:
                  type: array
                  description: Regencies where the case happened
                  items:
                    type: integer
                  example: [5320]
                animals:
                  type: array
                  description: Animals involved in this case
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: Name of the animal
                        example: Penyu Hijau
                      amount:
                        type: integer
                        description: Amount of the animal involved
                        example: 3
                      category:
                        type: string
                        description: Category of the animal
                        example: Penyu
                      scientific_name:
                        type: string
                        description: Scientific name of the animal
                        example: Chelonia mydas

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully add new site"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      news:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the news
                            example: 8
                          title:
                            type: string
                            description: Title of the news
                            example: KKP Gagalkan Penangkapan Penyu Hijau Ilegal di Desa Waduwalla
                          url:
                            type: string
                            description: URL of the news
                            example: https://borneo24.com/headlines/kkp-gagalkan-penangkapan-penyu-hijau-ilegal-di-desa-waduwalla
                          date:
                            type: string
                            description: Date of the reported news
                            example: "2020-11-05"
                          is_trained:
                            type: boolean
                            description: Whether the row has been trained or not
                            example: false
                          label:
                            type: string
                            description: Label of the news
                            example: "perburuan"
                          organizations:
                            type: array
                            description: Organizations involved in the news
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the organization
                                name:
                                  type: string
                                  description: Name of the organization
                            example: [
                              {
                                "id": 2,
                                "name": "BKKPN Kupang"
                              },
                              {
                                "id": 3,
                                "name": "Dinas Kelautan dan Perikanan (DKP) Kabupaten Sabu Raijua"
                              }
                            ]
                          site:
                            type: object
                            description: Site source of the news
                            properties:
                              id:
                                type: integer
                                description: ID represents a unique identifier of the website
                                example: 4
                              name:
                                type: string
                                description: Name of the website
                                example: Borneo24.com - Berita Terbaru dan Terkini di Kalimantan
                          animals:
                            type: array
                            description: Animals involved in this case
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the animal
                                  example: 7
                                name:
                                  type: string
                                  description: Name of the animal
                                  example: Penyu Hijau
                                scientific_name:
                                  type: string
                                  description: Scientific_name of the animal
                                  example: Chelonia mydas
                                amount:
                                  type: integer
                                  description: Amount of the animal involved
                                  example: 3
                                category:
                                  type: object
                                  description: Category of the animal
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the category
                                      example: 1
                                    name:
                                      type: string
                                      description: Category name
                                      example: Penyu
                          regencies:
                            type: array
                            description: Regencies where the case happened
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the regency
                                  example: 5320
                                name:
                                  type: string
                                  description: Name of the regency
                                  example: sabu raijua
                                province:
                                  type: object
                                  description: Province of the regency
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the province
                                      example: 53
                                    name:
                                      type: string
                                      description: Name of the province
                                      example: nusa tenggara timur
                                    longitude:
                                      type: number
                                      format: double
                                      description: Longitude of the province
                                      example: 120.69786
                                    latitude:
                                      type: number
                                      format: double
                                      description: Latitude of the province
                                      example: -8.56568
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      title:
                        type: array
                        description: List of errors in title field
                        items:
                          type: string
                        example: [
                          "The title field is required.",
                        ]
                      url:
                        type: array
                        description: List of errors in url field
                        items:
                          type: string
                        example: [
                          "The url field is required.",
                          "The url must be a valid URL.",
                          "The url has already been taken."
                        ]
                      date:
                        type: array
                        description: List of errors in date field
                        items:
                          type: string
                        example: [
                          "The date is not a valid date."
                        ]
                      is_trained:
                        type: array
                        description: List of errors in is_trained field
                        items:
                          type: string
                        example: [
                          "The is_trained field is required.",
                        ]
                      label:
                        type: array
                        description: List of errors in label field
                        items:
                          type: string
                        example: [
                          "The label field is required.",
                          "The selected label is invalid."
                        ]
                      animals:
                        type: array
                        description: List of errors in animals field
                        items:
                          type: string
                        example: [
                          "The animals field is required."
                        ]
                      regencies:
                        type: array
                        description: List of errors in regencies field
                        items:
                          type: string
                        example: [
                          "The regencies field is required.",
                          "The regencies.0 must be a number."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/private/news/{newsId}':
    put:
      tags:
        - News
      summary: Edit news
      description: Edit a specified news by news id
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: bearer
            example: Bearer 105Ua13XmskD3WS9MGFHy2IqMOqT6luSm09JBsSt3T
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - date
                - animals
                - label
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                date:
                  type: string
                  description: Date of the reported news with valid yyyy-mm-dd format (optional)
                  example: "2020-11-05"
                label:
                  type: string
                  description: Label of the news (penyelundupan, penyitaan, perburuan, perdagangan, others)
                  example: "perburuan"
                organizations:
                  type: array
                  description: Organizations involved in the news (optional)
                  items:
                    type: string
                  example: [
                    BKKPN Kupang,
                    Dinas Kelautan dan Perikanan (DKP) Kabupaten Sabu Raijua
                  ]
                site:
                  type: string
                  description: Site source of the news (optional)
                  example: Borneo24.com - Berita Terbaru dan Terkini di Kalimantan
                regencies:
                  type: array
                  description: Regencies where the case happened
                  items:
                    type: integer
                  example: [5320]
                animals:
                  type: array
                  description: Animals involved in this case
                  items:
                    type: string
                  example: Penyu Hijau
                notes:
                  type: string
                  description: Specific notes from that user
                  example: "Parah sih ini, gak bisa dibiarin sih ini."

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully edit news"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      edited:
                        type: object
                        description: Edited news
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the news
                            example: 8
                          date:
                            type: string
                            description: Date of the reported news
                            example: "2020-11-05"
                          label:
                            type: string
                            description: Label of the news
                            example: "perburuan"
                          organizations:
                            type: array
                            description: Organizations involved in the news
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the organization
                                name:
                                  type: string
                                  description: Name of the organization
                            example: [
                              {
                                "id": 2,
                                "name": "BKKPN Kupang"
                              },
                              {
                                "id": 3,
                                "name": "Dinas Kelautan dan Perikanan (DKP) Kabupaten Sabu Raijua"
                              }
                            ]
                          site:
                            type: object
                            description: Site source of the news
                            properties:
                              id:
                                type: integer
                                description: ID represents a unique identifier of the website
                                example: 4
                              name:
                                type: string
                                description: Name of the website
                                example: Borneo24.com - Berita Terbaru dan Terkini di Kalimantan
                          animals:
                            type: array
                            description: Animals involved in this case
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the animal
                                  example: 7
                                name:
                                  type: string
                                  description: Name of the animal
                                  example: Penyu Hijau
                                scientific_name:
                                  type: string
                                  description: Scientific_name of the animal
                                  example: Chelonia mydas
                                category:
                                  type: object
                                  description: Category of the animal
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the category
                                      example: 1
                                    name:
                                      type: string
                                      description: Category name
                                      example: Penyu
                          regencies:
                            type: array
                            description: Regencies where the case happened
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the regency
                                  example: 5320
                                name:
                                  type: string
                                  description: Name of the regency
                                  example: sabu raijua
                                province:
                                  type: object
                                  description: Province of the regency
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the province
                                      example: 53
                                    name:
                                      type: string
                                      description: Name of the province
                                      example: nusa tenggara timur
                                    longitude:
                                      type: number
                                      format: double
                                      description: Longitude of the province
                                      example: 120.69786
                                    latitude:
                                      type: number
                                      format: double
                                      description: Latitude of the province
                                      example: -8.56568
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      date:
                        type: array
                        description: List of errors in date field
                        items:
                          type: string
                        example: [
                          "The date is not a valid date."
                        ]
                      label:
                        type: array
                        description: List of errors in label field
                        items:
                          type: string
                        example: [
                          "The label field is required.",
                          "The selected label is invalid."
                        ]
                      animals:
                        type: array
                        description: List of errors in animals field
                        items:
                          type: string
                        example: [
                          "The animals field is required."
                        ]
                      regencies:
                        type: array
                        description: List of errors in regencies field
                        items:
                          type: string
                        example: [
                          "The regencies field is required.",
                          "The regencies.0 must be a number."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/check-url':
    get:
      tags:
        - News
      description: Check if URL exists in database
      summary: Check existing URL
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: url
          in: query
          required: true
          description: URL to be checked
          schema:
            type: string
          example: https://apple.com/
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully check URL"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      is_existing:
                        type: boolean
                        description: Boolean whether the URL exists in the database
                        example: true
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      url:
                        type: array
                        description: List of errors in url field
                        items:
                          type: string
                        example: [
                          "The url field is required.",
                          "The url must be a valid URL."
                        ]

  '/api/general/news/latest':
    get:
      tags:
        - News
      description: Check latest update on database
      summary: Check latest update
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully check URL"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      latest:
                        type: string
                        format: datetime
                        description: Latest updated news time
                        example: "2021-11-10T16:25:47.000000Z"
                      count:
                        type: number
                        description: Amount of news since last updated
                        example: 5
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/keywords':
    get:
      tags:
        - Users
      description: Get all keywords
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
      summary: Get all keywords
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get news"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      keywords:
                        type: array
                        description: Keywords data
                        items:
                          type: string
                        example: ['perburuan penyu', 'penangkapan harimau']
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/auth/register':
    post:
      tags:
        - Authentication
      description: Ya buat register lah apa lagi
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - name
                - email
                - password
                - password_confirmation
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                name:
                  type: string
                  description: Name of the user
                  example: Farrel Najib Anshary
                email:
                  type: string
                  description: User's email
                  example: farrel.anshary@binus.ac.id
                password:
                  type: string
                  description: User's password
                  example: admin123
                password_confirmation:
                  type: string
                  description: User's password confirmation
                  example: admin123
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully register new user"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      token:
                        type: string
                        description: Token string used for authentication
                        example: 2|Hvu54arWsoLzjciFOBvrASbYyanFKLB2B9R9tAQV
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the user
                            example: 1
                          name:
                            type: string
                            description: Name of the user
                            example: Farrel Najib Anshary
                          email:
                            type: string
                            description: User's email
                            example: farrel.anshary@binus.ac.id
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      name:
                        type: array
                        description: List of errors in name field
                        items:
                          type: string
                        example: [
                          "The name field is required.",
                        ]
                      email:
                        type: array
                        description: List of errors in email field
                        items:
                          type: string
                        example: [
                          "The email field is required.",
                          "The email must be a valid email address.",
                          "The email has already been taken."
                        ]
                      password:
                        type: array
                        description: List of errors in password field
                        items:
                          type: string
                        example: [
                          "The password field is required.",
                          "The password confirmation does not match."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/auth/login':
    post:
      tags:
        - Authentication
      summary: Login
      description: Ya buat login lah koplak
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
                - email
                - password
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
                email:
                  type: string
                  description: User's email
                  example: farrel.anshary@binus.ac.id
                password:
                  type: string
                  description: User's password
                  example: admin123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully logged in"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      token:
                        type: string
                        description: Token string used for authentication
                        example: 2|Hvu54arWsoLzjciFOBvrASbYyanFKLB2B9R9tAQV
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      email:
                        type: array
                        description: List of errors in email field
                        items:
                          type: string
                        example: [
                          "The email field is required."
                        ]
                      password:
                        type: array
                        description: List of errors in password field
                        items:
                          type: string
                        example: [
                          "The password field is required."
                        ]
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: Invalid email or password

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/auth/logout':
    post:
      tags:
        - Authentication
      summary: Logout
      description: Gapaham lagi gw kalo lu gak ngerti logout buat apaan
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
            format: bearer
            example: Bearer 10|5Ua13XmskD3WS9MGFHy2IqMOqT6luSm09JBsSt3T
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - api_key
              properties:
                api_key:
                  type: string
                  description: API key provided by Farrel Anshary
                  example: asdasd
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully logged out"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/animals':
    get:
      tags:
        - Trending
      description: Get number of cases of animals. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get number of cases
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get animal trending"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 632
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      categories:
                        type: array
                        description: Categories data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the category
                              example: 1
                            name:
                              type: string
                              description: Name of the category
                              example: Harimau
                            news_count:
                              type: integer
                              description: Numbers of news found in this category
                              example: 62
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required when end is present.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required when start is present.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/animals/labels':
    get:
      tags:
        - Trending
      description: Get number of cases of animals with their labels. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get number of cases per label
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get animal trending"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 632
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      categories:
                        type: array
                        description: Categories data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the category
                              example: 1
                            name:
                              type: string
                              description: Name of the category
                              example: Harimau
                            penyelundupan:
                              type: integer
                              description: Numbers of penyelundupan news found in this category
                              example: 8
                            penyitaan:
                              type: integer
                              description: Numbers of penyitaan news found in this category
                              example: 8
                            perburuan:
                              type: integer
                              description: Numbers of perburuan news found in this category
                              example: 12
                            perdagangan:
                              type: integer
                              description: Numbers of perdagangan news found in this category
                              example: 24
                            others:
                              type: integer
                              description: Numbers of other news found in this category
                              example: 10
                            total:
                              type: integer
                              description: Numbers of total news found in this category
                              example: 62
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required when end is present.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required when start is present.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/animals/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get number of cases of an animal. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get number of cases by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get animal trending"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the category
                            example: 79
                          name:
                            type: string
                            description: Name of the category
                            example: kakatua
                          new_count:
                            type: integer
                            description: Numbers of new news found in this category
                            example: 3
                          old_count:
                            type: integer
                            description: Numbers of old news found in this category
                            example: 4

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Animal not found"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/animals/labels/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get number of cases of an animals with their labels
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get number of cases per label by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get numbers of cases where burung involved"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 62
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      animals:
                        type: array
                        description: Animals data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the animal
                              example: 1
                            name:
                              type: string
                              description: Name of the animal
                              example: burung kacer
                            penyelundupan:
                              type: integer
                              description: Numbers of penyelundupan news found in this animal
                              example: 8
                            penyitaan:
                              type: integer
                              description: Numbers of penyitaan news found in this animal
                              example: 8
                            perburuan:
                              type: integer
                              description: Numbers of perburuan news found in this animal
                              example: 12
                            perdagangan:
                              type: integer
                              description: Numbers of perdagangan news found in this animal
                              example: 24
                            others:
                              type: integer
                              description: Numbers of other news found in this animal
                              example: 10
                            total:
                              type: integer
                              description: Numbers of total news found in this animal
                              example: 62
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required when end is present.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required when start is present.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/v2/animals/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get rising cases of an animal category. Sorted by percentage
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get rising cases by ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get animal trending"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      old_start:
                        type: string
                        format: date
                        description: Start date returned by server
                        example: '2019-10-30'
                      old_end:
                        type: string
                        format: date
                        description: End date returned by server
                        example: '2020-10-29'
                      animals:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the animal
                            example: 79
                          name:
                            type: string
                            description: Name of the animal
                            example: burung
                          scientific_name:
                            type: string
                            description: Scientific name of the animal
                            example: aves
                          old:
                            type: integer
                            description: Old number of cases
                            example: 13
                          recent:
                            type: integer
                            description: Recent number of cases
                            example: 20
                          total:
                            type: integer
                            description: Total number of cases
                            example: 33
                          percentage:
                            type: number
                            format: double
                            description: Total number of cases
                            example: 53.84615384615385
                          differences:
                            type: integer
                            description: Differences between old and new news
                            example: 7


        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Animal not found"

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/rising':
    get:
      tags:
        - Trending
      description: Get number of rising cases of animals. Sorted by rising cases
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get number of rising cases
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get rising cases"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      old_start:
                        type: string
                        format: date
                        description: Start date returned by server
                        example: '2019-10-30'
                      old_end:
                        type: string
                        format: date
                        description: End date returned by server
                        example: '2020-10-29'
                      categories:
                        type: array
                        description: Categories data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the category
                              example: 1
                            name:
                              type: string
                              description: Name of the category
                              example: Burung
                            old:
                              type: integer
                              description: Old number of cases
                              example: 13
                            recent:
                              type: integer
                              description: Recent number of cases
                              example: 20
                            total:
                              type: integer
                              description: Total number of cases
                              example: 33
                            percentage:
                              type: number
                              format: double
                              description: Total number of cases
                              example: 53.84615384615385

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/rank/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get rank of an animal
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get animal rank by category ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get rising cases"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      old_end:
                        type: string
                        format: date
                        description: End date returned by server
                        example: '2020-10-29'
                      old_start:
                        type: string
                        format: date
                        description: Start date returned by server
                        example: '2019-10-30'
                      very_old_end:
                        type: string
                        format: date
                        description: End date returned by server
                        example: '2020-10-29'
                      very_old_start:
                        type: string
                        format: date
                        description: Start date returned by server
                        example: '2019-10-30'
                      new_rank:
                        type: number
                        format: date
                        description: New rank of the animal
                        example: 230
                      old_rank:
                        type: number
                        format: date
                        description: Old rank of the animal
                        example: 31


        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/region':
    get:
      tags:
        - Trending
      description: Get number of cases of a region. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get trending province
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending region"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 477
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      provinces:
                        type: array
                        description: Single province data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the province
                              example: 11
                            name:
                              type: string
                              description: Name of the province
                              example: "aceh"
                            latitude:
                              type: number
                              format: double
                              description: Latitude of the province
                              example: 4.36855
                            longitude:
                              type: number
                              format: double
                              description: Longitude of the province
                              example: 97.0253
                            news_count:
                              type: integer
                              description: Total cases in this province
                              example: 17
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/region/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get number of cases of regions where an animal involved. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get trending province by category ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending region where kakatua involved"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 33
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      provinces:
                        type: array
                        description: Single province data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the province
                              example: 11
                            name:
                              type: string
                              description: Name of the province
                              example: "aceh"
                            latitude:
                              type: number
                              format: double
                              description: Latitude of the province
                              example: 4.36855
                            longitude:
                              type: number
                              format: double
                              description: Longitude of the province
                              example: 97.0253
                            news_count:
                              type: integer
                              description: Total cases in this province
                              example: 17
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/sites':
    get:
      tags:
        - Trending
      description: Get number of cases reported by a site. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get trending sites
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending sites"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 477
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      sites:
                        type: array
                        description: Sites data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the website
                              example: 1
                            name:
                              type: string
                              description: Name of the website
                              example: detiknews
                            news_count:
                              type: integer
                              description: Total cases in this website
                              example: 17
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/sites/{id}':
    get:
      tags:
        - Watchlist
      description: Get number of cases reported by a site. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get trending sites by category ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending sites where kakatua involved"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 49
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      sites:
                        type: array
                        description: Sites data
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: ID represents a unique identifier of the website
                              example: 1
                            name:
                              type: string
                              description: Name of the website
                              example: detiknews
                            news_count:
                              type: integer
                              description: Total cases in this website
                              example: 4
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/labels':
    get:
      tags:
        - Trending
      description: Get number of cases of a label. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
      summary: Get trending labels
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending label"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 633
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      labels:
                        type: array
                        description: Labels data
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Name of the label
                              example: penyelundupan
                            news_count:
                              type: integer
                              description: Total cases in this label
                              example: 303
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/labels/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get number of cases of a label where an animal involved. Sorted by number of cases descendingly
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the news
          schema:
            type: string
            format: date
          example: '2015-10-24'
        - name: end
          in: query
          required: true
          description: End date of the news
          schema:
            type: string
            format: date
          example: '2021-10-31'
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get trending labels by category ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Returned data from server
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get trending label where kakatua involved"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 49
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      labels:
                        type: array
                        description: Labels data
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: Name of the label
                              example: penyelundupan
                            news_count:
                              type: integer
                              description: Total cases in this label
                              example: 18
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/news/animals/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get all news of an animal.
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: start
          in: query
          required: true
          description: Start date of the query
          schema:
            type: string
            format: date
          example: "2021-10-31"
        - name: end
          in: query
          required: true
          description: End date of the query
          schema:
            type: string
            format: date
          example: "2021-11-31"
        - name: query
          in: query
          required: false
          description: Search query
          schema:
            type: string
          example: Penangkapan penyu
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get all news by category ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get news"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      total:
                        type: integer
                        description: Total numbers of cases
                        example: 49
                      selected_start:
                        type: string
                        format: date
                        description: Start date selected by user
                        example: '2020-10-30'
                      selected_end:
                        type: string
                        format: date
                        description: End date selected by user
                        example: '2021-10-30'
                      news:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: ID represents a unique identifier of the news
                            example: 1
                          title:
                            type: string
                            description: Title of the news
                            example: Bunuh-Cincang Penyu Langka Dilindungi, 7 Nelayan Gunungkidul Ditangkap
                          url:
                            type: string
                            description: URL of the news
                            example: https://news.detik.com/berita-jawa-tengah/d-5541942/bunuh-cincang-penyu-langka-dilindungi-7-nelayan-gunungkidul-ditangkap
                          date:
                            type: string
                            description: Date of the reported case
                            example: "2021-04-22"
                          news_date:
                            type: string
                            description: Date of the news
                            example: "2021-04-22"
                          is_trained:
                            type: boolean
                            description: Whether the row has been trained or not
                            example: true
                          label:
                            type: string
                            description: Label of the news
                            example: "perburuan"
                          organizations:
                            type: array
                            description: Organizations involved in the news
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the organization
                                name:
                                  type: string
                                  description: Name of the organization
                            example: [
                              {
                                "id": 6,
                                "name": "BKSDA DIY"
                              }
                            ]
                          site:
                            type: object
                            description: Site source of the news
                            properties:
                              id:
                                type: integer
                                description: ID represents a unique identifier of the website
                                example: 2
                              name:
                                type: string
                                description: Name of the website
                                example: detiknews
                          animals:
                            type: array
                            description: Animals involved in this case
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the animal
                                  example: 6
                                name:
                                  type: string
                                  description: Name of the animal
                                  example: Penyu Lekang
                                scientific_name:
                                  type: string
                                  description: Scientific name of the animal
                                  example: Lepidochelys olivacea
                                amount:
                                  type: integer
                                  description: Amount of the animal involved
                                  example: 1
                                category:
                                  type: object
                                  description: Category of the animal
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the category
                                      example: 1
                                    name:
                                      type: string
                                      description: Category name
                                      example: Penyu
                          regencies:
                            type: array
                            description: Regencies where the case happened (nullable)
                            items:
                              type: object
                              description: Regency where the case happened (nullable)
                              properties:
                                id:
                                  type: integer
                                  description: ID represents a unique identifier of the regency
                                  example: 3403
                                name:
                                  type: string
                                  description: Name of the regency
                                  example: gunung kidul
                                province:
                                  type: object
                                  description: Province where the case happened (nullable)
                                  properties:
                                    id:
                                      type: integer
                                      description: ID represents a unique identifier of the province
                                      example: 34
                                    name:
                                      type: string
                                      description: Name of the province
                                      example: di yogyakarta
                                    latitude:
                                      type: number
                                      format: double
                                      description: Latitude of the province
                                      example: 7.7956
                                    longitude:
                                      type: number
                                      format: double
                                      description: Longitude of the province
                                      example: 110.3695

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'

  '/api/general/trending/year-pattern/{categoryId}':
    get:
      tags:
        - Watchlist
      description: Get years pattern of an animal.
      parameters:
        - name: api_key
          in: query
          required: true
          description: API key provided by Farrel Anshary
          schema:
            type: string
          example: asdasd
        - name: categoryId
          in: path
          required: true
          description: ID of the animal category
          schema:
            type: integer
          example: 79
      summary: Get years pattern of an animal
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "Successfully get news"
                  data:
                    type: object
                    description: Returned data from server
                    properties:
                      pattern:
                        type: object
                        description: Pattern data
                        properties:
                          "1":
                            type: array
                            description: Data of pattern in January
                            items:
                              type: object
                              description: Data of pattern in each year
                              properties:
                                year:
                                  type: string
                                  description: Which year it is
                                  example: "2018"
                                pattern:
                                  type: string
                                  description: Pattern of January 2018
                                  example: "up"

        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "The given data was invalid."
                  errors:
                    type: object
                    description: List of error fields
                    properties:
                      start:
                        type: array
                        description: List of errors in start field
                        items:
                          type: string
                        example: [
                          "The start field is required.",
                          "The start is not a valid date."
                        ]
                      end:
                        type: array
                        description: List of errors in end field
                        items:
                          type: string
                        example: [
                          "The end field is required.",
                          "The end is not a valid date."
                        ]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Love letter from server ❤️
                    example: "No query results for model [App\\Models\\Category] 1000"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_401'


components:
  schemas:
    inline_response_401:
      type: object
      properties:
        message:
          type: string
          description: Love letter from server ❤️
          example: Unauthorized
